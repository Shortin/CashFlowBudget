"""Migration 2025-01-22_00-09-04

Revision ID: 8947cfe2014e
Revises: 9ae9ad7c7f76
Create Date: 2025-01-22 00:09:05.046369

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8947cfe2014e'
down_revision: Union[str, None] = '9ae9ad7c7f76'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('expenses', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_comment='Дата и время создания записи расхода',
               existing_nullable=True,
               schema='data')
    op.alter_column('families', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_comment='Дата и время создания записи о семье',
               existing_nullable=True,
               schema='data')
    op.alter_column('incomes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_comment='Дата и время создания записи дохода',
               existing_nullable=True,
               schema='data')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('incomes', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_comment='Дата и время создания записи дохода',
               existing_nullable=True,
               schema='data')
    op.alter_column('families', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_comment='Дата и время создания записи о семье',
               existing_nullable=True,
               schema='data')
    op.alter_column('expenses', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_comment='Дата и время создания записи расхода',
               existing_nullable=True,
               schema='data')
    # ### end Alembic commands ###
